# E2E specific settings for Policy Service

# Server port inside the container (should match what docker-compose.yml maps from host:8081)
# If main application.properties defaults to 8080, this is fine.
server.port=8080

# Database connection uses ENV VARS (DB_NAME, DB_USER, DB_PASSWORD from docker-compose.e2e.yml)
# and DB_HOST, DB_PORT from base docker-compose.yml's environment for policy-service.
# So, no specific spring.datasource.* overrides needed here if main application.properties has placeholders.

# JPA Configuration for E2E
# Defaults from main application.properties (validate/true) are good.
# spring.jpa.hibernate.ddl-auto=validate
# spring.jpa.show-sql=true
spring.datasource.hikari.initialization-fail-timeout=60000
spring.datasource.hikari.connection-timeout=30000
# Flyway Configuration for E2E
# Defaults from main application.properties (enabled=true) are good.
# This path MUST be correct for policy-service's migrations.
spring.flyway.locations=classpath:db/migration/policy

# Kafka connection uses KAFKA_BOOTSTRAP_SERVERS ENV VAR from base docker-compose.yml.
# Producer/Consumer group settings specific to this service are in main application.properties.

# Logging Configuration for E2E
logging.level.root=INFO
logging.level.com.insurance.policy=DEBUG
logging.level.org.springframework=INFO
logging.level.org.hibernate=INFO
logging.level.org.flywaydb=INFO