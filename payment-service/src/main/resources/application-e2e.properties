# E2E specific settings for Payment Service

server.port=8080

# Database connection uses ENV VARS from docker-compose.e2e.yml.
# JPA defaults from main application.properties are good.
# Flyway defaults from main application.properties are good.
# This path MUST be correct for payment-service's migrations.
spring.flyway.locations=classpath:db/migration/payment
spring.datasource.hikari.initialization-fail-timeout=60000
spring.datasource.hikari.connection-timeout=30000
# Kafka connection uses KAFKA_BOOTSTRAP_SERVERS ENV VAR from base docker-compose.yml.
# Producer/Consumer group settings specific to this service are in main application.properties.

# PAYMENT_GATEWAY_MOCK_URL is inherited from the base docker-compose.yml's environment
# for payment-service if not explicitly overridden in docker-compose.e2e.yml.
# If you want to ensure it uses the Docker network name for the mock,
# and if your main application.properties has a placeholder like ${PAYMENT_GATEWAY_URL},
# then docker-compose.yml (base) should set that env var:
# PAYMENT_GATEWAY_URL: http://payment-gateway-mock:8080/api/gateway
# (Assuming mock's internal port is 8080)
# Alternatively, set it explicitly here if needed:
# app.services.payment-gateway.url=http://payment-gateway-mock:8080/api/gateway

# E2E specific business logic if any
# app.payment.retry.max-attempts=3

# Logging Configuration for E2E
logging.level.root=INFO
logging.level.com.billing.payment=DEBUG
logging.level.org.springframework=INFO
logging.level.org.hibernate=INFO
logging.level.org.flywaydb=INFO