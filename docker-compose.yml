# version: '3.8' # This line is optional with modern Docker Compose

services:
  mariadb:
    image: mariadb:11.0
    healthcheck:
    
      test: ["CMD-SHELL", "mysqlshow -h 127.0.0.1 -u root -p$$MYSQL_ROOT_PASSWORD --status > /tmp/healthcheck_status.log 2>&1 || exit 1"]
      #test: ["CMD", "mysql", "-h", "127.0.0.1", "-u", "root", "-pe2e_very_secret_root_password", "-e", "SELECT 1"]
      interval: 10s
      timeout: 5s
      retries: 12 # Increased from your original 5 for more resilience
      start_period: 60s # Increased from your original 30s for more init time
    restart: on-failure
    # Default environment variables for MariaDB can be added here if desired for non-E2E local 'docker-compose up'
    # For E2E, these will be overridden by docker-compose.e2e.yml
    # environment:
    #   MYSQL_ROOT_PASSWORD: default_root_password_dev
    #   MYSQL_DATABASE: billing_system_dev
    #   MYSQL_USER: billing_user_dev
    #   MYSQL_PASSWORD: billing_password_dev

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    restart: on-failure

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    depends_on:
      zookeeper:
        condition: service_started
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      # KAFKA_ADVERTISED_LISTENERS: is set in e2e/dev/prod override files
    restart: on-failure

  redis:
    image: redis:7.2-alpine
    restart: on-failure

  policy-service:
    build:
      context: .
      dockerfile: policy-service/Dockerfile
    ports:
      - "8081:8080"
    depends_on:
      mariadb:
        condition: service_started
      kafka:
        condition: service_started
      redis:
        condition: service_started
    restart: on-failure
    environment:
      DB_HOST: mariadb
      DB_PORT: 3306
      KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      REDIS_HOST: redis
      REDIS_PORT: 6379
      SPRING_JPA_HIBERNATE_DDL_AUTO: validate
      SPRING_FLYWAY_ENABLED: true
      # DB_NAME, DB_USER, DB_PASSWORD will come from override files or app defaults

  billing-service:
    build:
      context: .
      dockerfile: billing-service/Dockerfile
    ports:
      - "8082:8080"
    depends_on:
      mariadb:
        condition: service_started
      kafka:
        condition: service_started
      redis:
        condition: service_started
    restart: on-failure
    environment:
      DB_HOST: mariadb
      DB_PORT: 3306
      KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      REDIS_HOST: redis
      REDIS_PORT: 6379
      SPRING_JPA_HIBERNATE_DDL_AUTO: validate
      SPRING_FLYWAY_ENABLED: true

  payment-service:
    build:
      context: .
      dockerfile: payment-service/Dockerfile
    ports:
      - "8083:8080"
    depends_on:
      mariadb:
        condition: service_started
      kafka:
        condition: service_started
      redis:
        condition: service_started
      payment-gateway-mock:
        condition: service_started
    restart: on-failure
    environment:
      DB_HOST: mariadb
      DB_PORT: 3306
      KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      REDIS_HOST: redis
      REDIS_PORT: 6379
      PAYMENT_GATEWAY_MOCK_URL: http://payment-gateway-mock:8090/api/gateway
      SPRING_JPA_HIBERNATE_DDL_AUTO: validate
      SPRING_FLYWAY_ENABLED: true

  notification-service:
    build:
      context: .
      dockerfile: notification-service/Dockerfile
    ports:
      - "8084:8080"
    command: /bin/sh -c "java -jar app.jar > /app/startup.out 2>&1 || (echo 'NOTIFICATION SERVICE CRASHED - STDOUT:' && cat /app/startup.out && echo 'NOTIFICATION SERVICE CRASHED - STDERR (if different from STDOUT):' && echo 'SLEEPING NOW' && sleep 300)"
    depends_on:
      mariadb:
        condition: service_started
      kafka:
        condition: service_started
      redis:
        condition: service_started
    restart: on-failure
    environment:
      DB_HOST: mariadb
      DB_PORT: 3306
      KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      REDIS_HOST: redis
      REDIS_PORT: 6379
      SPRING_JPA_HIBERNATE_DDL_AUTO: validate
      SPRING_FLYWAY_ENABLED: true

  payment-gateway-mock:
    build:
      context: .
      dockerfile: payment-gateway-mock/Dockerfile
    ports:
      - "8090:8080"
    restart: on-failure